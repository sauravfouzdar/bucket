syntax = "proto3";
package gfs;

option go_package = "gfs/proto";

service MasterService {
  rpc CreateFile(CreateFileRequest) returns (CreateFileResponse);
  rpc DeleteFile(DeleteFileRequest) returns (DeleteFileResponse);
  rpc GetFileInfo(GetFileInfoRequest) returns (GetFileInfoResponse);
  rpc GetChunkLocation(GetChunkLocationRequest) returns (GetChunkLocationResponse);
  rpc AllocateChunk(AllocateChunkRequest) returns (AllocateChunkResponse);
}

service ChunkService {
  rpc ReadChunk(ReadChunkRequest) returns (ReadChunkResponse);
  rpc WriteChunk(WriteChunkRequest) returns (WriteChunkResponse);
  rpc AppendChunk(AppendChunkRequest) returns (AppendChunkResponse);
}

// Master requests/responses
message CreateFileRequest {
  string path = 1;
}

message CreateFileResponse {
  bool success = 1;
  string message = 2;
}

message DeleteFileRequest {
  string path = 1;
}

message DeleteFileResponse {
  bool success = 1;
  string message = 2;
}

message GetFileInfoRequest {
  string path = 1;
}

message GetFileInfoResponse {
  string path = 1;
  int64 size = 2;
  int32 chunk_count = 3;
  int64 creation_time = 4;
  int64 modification_time = 5;
}

message GetChunkLocationRequest {
  string path = 1;
  int32 chunk_index = 2;
}

message ChunkLocation {
  string server_id = 1;
  string server_address = 2;
}

message GetChunkLocationResponse {
  uint64 handle = 1;
  uint64 version = 2;
  repeated ChunkLocation locations = 3;
}

message AllocateChunkRequest {
  string path = 1;
  int32 chunk_index = 2;
}

message AllocateChunkResponse {
  uint64 handle = 1;
  uint64 version = 2;
  repeated ChunkLocation locations = 3;
}

// Chunk requests/responses
message ReadChunkRequest {
  uint64 handle = 1;
  int32 offset = 2;
  int32 length = 3;
}

message ReadChunkResponse {
  bytes data = 1;
}

message WriteChunkRequest {
  uint64 handle = 1;
  int32 offset = 2;
  uint64 version = 3;
  bytes data = 4;
}

message WriteChunkResponse {
  bool success = 1;
  int32 bytes_written = 2;
}

message AppendChunkRequest {
  uint64 handle = 1;
  uint64 version = 2;
  bytes data = 3;
}

message AppendChunkResponse {
  bool success = 1;
  int32 offset = 2;
  int32 bytes_written = 3;
}